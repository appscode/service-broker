apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_BROKER_NAME}
  namespace: ${SERVICE_BROKER_NAMESPACE}
  labels:
    app: appscode-service-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appscode-service-broker
  template:
    metadata:
      labels:
        app: appscode-service-broker
    spec:
      serviceAccountName: ${SERVICE_BROKER_SERVICE_ACCOUNT}
      imagePullSecrets: [${SERVICE_BROKER_IMAGE_PULL_SECRET}]
      containers:
      - name: ${SERVICE_BROKER_NAME}
        image: ${SERVICE_BROKER_DOCKER_REGISTRY}/${SERVICE_BROKER_IMAGE}:${SERVICE_BROKER_IMAGE_TAG}
        imagePullPolicy: ${SERVICE_BROKER_IMAGE_PULL_POLICY}
        command:
        - "service-broker"
        args:
        - run
        - --port
        - "${SERVICE_BROKER_PORT}"
        - --catalog-path
        - ${SERVICE_BROKER_CATALOG_PATH}
        - --catalog-names
        - "${SERVICE_BROKER_CATALOG_NAMES}"
        - -v
        - "3"
        - --logtostderr
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: ${SERVICE_BROKER_PORT}
            scheme: HTTP
        volumeMounts:
        - mountPath: "${SERVICE_BROKER_CATALOG_PATH}/kubedb"
          name: kubedb-volume
      volumes:
      - name: kubedb-volume
        configMap:
          name: kubedb
