/*
Copyright 2018 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package versioned

import (
	authorizationv1alpha1 "github.com/kubedb/apimachinery/client/clientset/versioned/typed/authorization/v1alpha1"
	catalogv1alpha1 "github.com/kubedb/apimachinery/client/clientset/versioned/typed/catalog/v1alpha1"
	configv1alpha1 "github.com/kubedb/apimachinery/client/clientset/versioned/typed/config/v1alpha1"
	kubedbv1alpha1 "github.com/kubedb/apimachinery/client/clientset/versioned/typed/kubedb/v1alpha1"
	discovery "k8s.io/client-go/discovery"
	rest "k8s.io/client-go/rest"
	flowcontrol "k8s.io/client-go/util/flowcontrol"
)

type Interface interface {
	Discovery() discovery.DiscoveryInterface
	AuthorizationV1alpha1() authorizationv1alpha1.AuthorizationV1alpha1Interface
	// Deprecated: please explicitly pick a version if possible.
	Authorization() authorizationv1alpha1.AuthorizationV1alpha1Interface
	CatalogV1alpha1() catalogv1alpha1.CatalogV1alpha1Interface
	// Deprecated: please explicitly pick a version if possible.
	Catalog() catalogv1alpha1.CatalogV1alpha1Interface
	ConfigV1alpha1() configv1alpha1.ConfigV1alpha1Interface
	// Deprecated: please explicitly pick a version if possible.
	Config() configv1alpha1.ConfigV1alpha1Interface
	KubedbV1alpha1() kubedbv1alpha1.KubedbV1alpha1Interface
	// Deprecated: please explicitly pick a version if possible.
	Kubedb() kubedbv1alpha1.KubedbV1alpha1Interface
}

// Clientset contains the clients for groups. Each group has exactly one
// version included in a Clientset.
type Clientset struct {
	*discovery.DiscoveryClient
	authorizationV1alpha1 *authorizationv1alpha1.AuthorizationV1alpha1Client
	catalogV1alpha1       *catalogv1alpha1.CatalogV1alpha1Client
	configV1alpha1        *configv1alpha1.ConfigV1alpha1Client
	kubedbV1alpha1        *kubedbv1alpha1.KubedbV1alpha1Client
}

// AuthorizationV1alpha1 retrieves the AuthorizationV1alpha1Client
func (c *Clientset) AuthorizationV1alpha1() authorizationv1alpha1.AuthorizationV1alpha1Interface {
	return c.authorizationV1alpha1
}

// Deprecated: Authorization retrieves the default version of AuthorizationClient.
// Please explicitly pick a version.
func (c *Clientset) Authorization() authorizationv1alpha1.AuthorizationV1alpha1Interface {
	return c.authorizationV1alpha1
}

// CatalogV1alpha1 retrieves the CatalogV1alpha1Client
func (c *Clientset) CatalogV1alpha1() catalogv1alpha1.CatalogV1alpha1Interface {
	return c.catalogV1alpha1
}

// Deprecated: Catalog retrieves the default version of CatalogClient.
// Please explicitly pick a version.
func (c *Clientset) Catalog() catalogv1alpha1.CatalogV1alpha1Interface {
	return c.catalogV1alpha1
}

// ConfigV1alpha1 retrieves the ConfigV1alpha1Client
func (c *Clientset) ConfigV1alpha1() configv1alpha1.ConfigV1alpha1Interface {
	return c.configV1alpha1
}

// Deprecated: Config retrieves the default version of ConfigClient.
// Please explicitly pick a version.
func (c *Clientset) Config() configv1alpha1.ConfigV1alpha1Interface {
	return c.configV1alpha1
}

// KubedbV1alpha1 retrieves the KubedbV1alpha1Client
func (c *Clientset) KubedbV1alpha1() kubedbv1alpha1.KubedbV1alpha1Interface {
	return c.kubedbV1alpha1
}

// Deprecated: Kubedb retrieves the default version of KubedbClient.
// Please explicitly pick a version.
func (c *Clientset) Kubedb() kubedbv1alpha1.KubedbV1alpha1Interface {
	return c.kubedbV1alpha1
}

// Discovery retrieves the DiscoveryClient
func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	if c == nil {
		return nil
	}
	return c.DiscoveryClient
}

// NewForConfig creates a new Clientset for the given config.
func NewForConfig(c *rest.Config) (*Clientset, error) {
	configShallowCopy := *c
	if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
		configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
	}
	var cs Clientset
	var err error
	cs.authorizationV1alpha1, err = authorizationv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.catalogV1alpha1, err = catalogv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.configV1alpha1, err = configv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	cs.kubedbV1alpha1, err = kubedbv1alpha1.NewForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}

	cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
	if err != nil {
		return nil, err
	}
	return &cs, nil
}

// NewForConfigOrDie creates a new Clientset for the given config and
// panics if there is an error in the config.
func NewForConfigOrDie(c *rest.Config) *Clientset {
	var cs Clientset
	cs.authorizationV1alpha1 = authorizationv1alpha1.NewForConfigOrDie(c)
	cs.catalogV1alpha1 = catalogv1alpha1.NewForConfigOrDie(c)
	cs.configV1alpha1 = configv1alpha1.NewForConfigOrDie(c)
	cs.kubedbV1alpha1 = kubedbv1alpha1.NewForConfigOrDie(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
	return &cs
}

// New creates a new Clientset for the given RESTClient.
func New(c rest.Interface) *Clientset {
	var cs Clientset
	cs.authorizationV1alpha1 = authorizationv1alpha1.New(c)
	cs.catalogV1alpha1 = catalogv1alpha1.New(c)
	cs.configV1alpha1 = configv1alpha1.New(c)
	cs.kubedbV1alpha1 = kubedbv1alpha1.New(c)

	cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
	return &cs
}
