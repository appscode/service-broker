/*
Copyright 2018 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubedb/apimachinery/apis/authorization/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PostgresRoleLister helps list PostgresRoles.
type PostgresRoleLister interface {
	// List lists all PostgresRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresRole, err error)
	// PostgresRoles returns an object that can list and get PostgresRoles.
	PostgresRoles(namespace string) PostgresRoleNamespaceLister
	PostgresRoleListerExpansion
}

// postgresRoleLister implements the PostgresRoleLister interface.
type postgresRoleLister struct {
	indexer cache.Indexer
}

// NewPostgresRoleLister returns a new PostgresRoleLister.
func NewPostgresRoleLister(indexer cache.Indexer) PostgresRoleLister {
	return &postgresRoleLister{indexer: indexer}
}

// List lists all PostgresRoles in the indexer.
func (s *postgresRoleLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresRole))
	})
	return ret, err
}

// PostgresRoles returns an object that can list and get PostgresRoles.
func (s *postgresRoleLister) PostgresRoles(namespace string) PostgresRoleNamespaceLister {
	return postgresRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PostgresRoleNamespaceLister helps list and get PostgresRoles.
type PostgresRoleNamespaceLister interface {
	// List lists all PostgresRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresRole, err error)
	// Get retrieves the PostgresRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PostgresRole, error)
	PostgresRoleNamespaceListerExpansion
}

// postgresRoleNamespaceLister implements the PostgresRoleNamespaceLister
// interface.
type postgresRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PostgresRoles in the indexer for a given namespace.
func (s postgresRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresRole))
	})
	return ret, err
}

// Get retrieves the PostgresRole from the indexer for a given namespace and name.
func (s postgresRoleNamespaceLister) Get(name string) (*v1alpha1.PostgresRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("postgresrole"), name)
	}
	return obj.(*v1alpha1.PostgresRole), nil
}
